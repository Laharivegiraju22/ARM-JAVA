node {
 stage('Git-Checkout') {
  
   git 'https://github.com/Laharivegiraju22/multi-petclinic.git'
  }
    
 def project_path="01-Jenkins/Code/petclinic"
 stage('Deploy Approval') {
                input('Do you want to proceed and deploy in production server?')           
        }
 stage('Sonar Analysis'){

	withSonarQubeEnv('SonarQube'){
	sh 'mvn sonar:sonar'
	}
}

stage("Quality Gate"){
          timeout(time: 1, unit: 'MINUTES') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }        
      
stage('Jfrog Artifacory Upload') {

	def server= Artifactory.server 'Artifactory'
	def uploadSpec= """{
	"files": [{
	"pattern": "/root/.jenkins/workspace/Ramya/01-Jenkins/Code/petclinic/target/*.war",
		"target": "petclinic"}]
	}"""
server.upload(uploadSpec)
}

 stage('Geting Ready For Ansible') {
  
  sh label: 'Docker', script: 'cp -rf target/*.war ../../../04-Terraform/03-Ansible-Deploy/ansible/04-Tomcat/templates/'
  sh label: 'Jenkins', script: "echo '<h1> TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>' > ../../../04-Terraform/03-Ansible-Deploy/ansible/04-Tomcat/templates/apps/index.html"
}  
   
 }


def project_terra="04-Terraform/03-Ansible-Deploy/ansible/04-Tomcat" 
dir(project_terra) { 
stage('Prod Deployment on AWS'){
sh label: 'terraform', script: 'ansible-playbook -i /root/.jenkins/workspace/multi-petclinic_infrastructure/04-Terraform/03-Ansible-Deploy/jenkins-ci.ini -u ubuntu --key /root/.ssh/hkey.pem web-playbook.yaml'

 
}

 
}

}


