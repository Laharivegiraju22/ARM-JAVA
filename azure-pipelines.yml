# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: build
  displayName: build stage
  jobs:
  - job: build_job
    displayName: build job
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: '01-Jenkins/Code/petclinic/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/*.war'
        TargetFolder: '$(build.artifactstagingdirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: deployment
  displayName: deployment stage
     
  jobs:
   - deployment: prod
     displayName: Blue Deployment
     pool: 
       vmImage: windows-latest
   
     environment: 'prod'
     strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Free Trial (60584be9-98a4-4707-be50-badf2b4fb922)'
              appType: 'webApp'
              WebAppName: 'myjavaarm'
              packageForLinux: 'D:\a\1\drop\s\01-Jenkins\Code\petclinic\target\petclinic.war'
     
